spring.application.name=quanlitaichinh

spring.datasource.url=jdbc:mysql://localhost:3306/finance_db
spring.datasource.username=root
spring.datasource.password=123456

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
server.port=8080

# Logging Configuration
logging.level.com.financeapp=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JWT Configuration
app.jwt.secret=8Zz5tw0Ionm3XPZZfN0NOml3z9FMfmpgXwovR9fp6ryDIoGRM8EPHAB6iHsc0fb
app.jwt.expiration=86400000

# EmailJS Configuration
# Using Public API key instead of User ID
emailjs.service.id=service_fl181h7
# Create a password reset template in EmailJS with the same structure as the activation template
emailjs.template.reset.id=template_o8pq1a4
emailjs.template.activation.id=template_2g5m1mb
# Use the same template for contact form or create a new one
emailjs.template.contact.id=template_2g5m1mb
emailjs.user.id=6xS7gVcnrNq7WUmDe
emailjs.api.url=https://api.emailjs.com/api/v1.0/email/send

# Application Configuration
app.frontend.url=http://localhost:3000
app.token.expiry.minutes=30
